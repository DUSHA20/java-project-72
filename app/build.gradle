import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'checkstyle'
    id 'io.freefair.lombok' version '8.6'
    id 'com.github.ben-manes.versions' version '0.50.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'hexlet.code'

version = '1.0-SNAPSHOT'

application {
    mainClassName = 'hexlet.code.App'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'io.javalin:javalin:6.1.3'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    testImplementation platform('org.junit:junit-bom:5.10.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.25.1'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'com.h2database:h2:2.2.220'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'gg.jte:jte:3.1.9'
    implementation 'io.javalin:javalin-rendering:6.1.3'
    implementation 'org.webjars:bootstrap:5.2.3'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'gg.jte:jte:3.1.10'

    testImplementation(platform 'org.junit:junit-bom:5.10.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'io.javalin:javalin-test:6.1.3'
    testImplementation("org.assertj:assertj-core:3.25.3")
    implementation 'com.mashape.unirest:unirest-java:4.3.0'


}

compileJava {
    options.compilerArgs += ['--add-modules', 'java.sql']
}

tasks.test {
    useJUnitPlatform()
    // https://technology.lastminute.com/junit5-kotlin-and-gradle-dsl/
    testLogging {
        exceptionFormat = TestExceptionFormat.FULL
        events = [TestLogEvent.FAILED, TestLogEvent.PASSED, TestLogEvent.SKIPPED]
        // showStackTraces = true
        // showCauses = true
        showStandardStreams = true
    }
}

tasks.jacocoTestReport {
    dependsOn(tasks.test)
    reports {
        xml.required = true
    }
}